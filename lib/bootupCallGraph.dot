/*
 * Copyright (C) 2015
 *		Toshiaki NOZAWA <noz.tos <at> gmail_dot_com>
 * All rights reserved.
 *
 * Redistribution and use in source, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by Toshiaki NOZAWA.
 * 4. Neither the name of Toshiaki NOZAWA nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS DOCUMENT IS PROVIDED BY TOSHIAKI NOZAWA AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE CORPORATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

# usage:
# simply do
# > make
# from terminal, then be generated ../bootupCallGraph.png

digraph bootup {
	graph [label = "libopencm3 boot-up call graph		BASEDIR is \"opencm3/lib\"", fontsize = 18, compound = true];

	ENTRY [label = "stm32/f4/libopencm3_stm32f4.ld \n ENTRY(reset_handler)"];
	pre_main [label = "dispatch/vector_chipset.c \n pre_main()", style = dashed];
	main [label = "Your Application of main()", style = filled, fillcolor = "#99cc99"];

	ENTRY -> pre_main [lhead = cluster_reset_handler]

	subgraph cluster_reset_handler {
		label = "cm3/vector.c : reset_handler()";
		shape = circle;

		pre_main
			-> " (*__preinit_array_start)() \n.\n.\n.\n (*__preinit_array_end)() "
			-> " (*__init_array_start)() \n.\n.\n.\n (*__init_array_end)() "
			-> main
			-> " (*__fini_array_start)() \n.\n.\n.\n (*__fini_array_end)() "
	}

	subgraph cluster_pre_main {
		label = "included by dispatch/vector_chipset.c : pre_main()";

		pre_main -> "../stm32/f3/vector_chipset.c" [label = "#define STM32F3", fontname = "Helvetica", dir = none, style = dashed];
		pre_main -> "../stm32/f4/vector_chipset.c" [label = "#define STM32F4", fontname = "Helvetica", dir = none, style = dashed];
		pre_main -> "../lpc43xx/m4/vector_chipset.c" [label = "#define LPC43XX_M4", fontname = "Helvetica", dir = none, style = dashed];
		pre_main -> "../vf6xx/vector_chipset.c" [label = "#define VF6XX", fontname = "Helvetica", dir = none, style = dashed];
	}
}
